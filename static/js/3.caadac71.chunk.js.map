{"version":3,"sources":["../node_modules/ethereumjs-abi/lib/index.js","../../src/index.ts","../../../src/secp256k1v3-lib/index.ts","../../../src/secp256k1v3-lib/der.ts","../../src/constants.ts","../../src/account.ts","../../src/signature.ts","../../src/object.ts","../node_modules/ethjs-util/lib/index.js","../node_modules/is-hex-prefixed/src/index.js","../node_modules/strip-hex-prefix/src/index.js","../node_modules/ethereumjs-abi/node_modules/bn.js/lib/bn.js","../node_modules/ethereumjs-abi/index.js","../../src/bytes.ts","../../src/secp256k1v3-adapter.ts","../../src/hash.ts"],"names":["utils","require","BN","ABI","elementaryName","name","startsWith","slice","parseTypeN","type","parseInt","exec","parseTypeNxM","tmp","parseTypeArray","match","parseNumber","arg","isHexPrefixed","stripHexPrefix","toArray","Error","parseSignature","sig","length","args","method","split","retargs","params","encodeSingle","size","num","ret","i","Buffer","from","isArray","lastIndexOf","JSON","parse","push","unshift","concat","zeros","setLengthRight","bitLength","toArrayLike","toTwos","mul","pow","decodeSingle","parsedType","data","offset","parseType","rawType","toString","bytes","toNumber","decoded","subArray","memoryUsage","fromTwos","mod","isZero","div","isDynamic","stringify","value","eventID","types","map","join","keccak256","methodID","rawEncode","values","output","headLength","forEach","cur","rawDecode","parsed","simpleEncode","Array","prototype","call","arguments","simpleDecode","test","item","solidityHexValue","bitsize","subType","replace","arraySize","arrayValues","v","padding","bytesize","setLengthLeft","solidityPack","soliditySHA3","soliditySHA256","sha256","solidityRIPEMD160","ripemd160","fromSerpent","c","j","toSerpent","module","exports","secp256k1","ethjsUtil","Object","assign","__exportStar","ec","EC","ecparams","curve","privateKeyExport","privateKey","compressed","d","ucmp","n","point","g","toPublicKey","getX","getY","privateKeyModInverse","bn","invm","signatureImport","sigObj","r","s","ecdhUnsafe","publicKey","keyFromPublic","scalar","shared","pub","x","y","alloc","isOdd","copy","EC_PRIVKEY_EXPORT_DER_COMPRESSED","EC_PRIVKEY_EXPORT_DER_UNCOMPRESSED","result","privateKeyImport","index","lenb","len","signatureImportLax","signature","lenbyte","rlen","rindex","slen","sindex","rvalue","svalue","assert","addr","bytes_1","address","eip1191ChainId","toLowerCase","prefix","undefined","hash","hash_1","toUpperCase","nonce","nonceBN","salt","initCode","fromBuf","saltBuf","initCodeBuf","a","privateKeyVerify","sanitize","publicKeyVerify","pubKey","publicKeyConvert","publicKeyCreate","calculateSigRecovery","chainId","isValidSigRecovery","recovery","msgHash","sign","senderPubKey","recover","buf","homesteadOrLater","SECP256K1_N_DIV_2","SECP256K1_N","rBN","sBN","gt","cmp","message","self","fields","raw","_fields","toJSON","label","obj_1","field","serialize","rlp","encode","getter","setter","allowZero","allocUnsafe","allowLess","defineProperty","enumerable","configurable","get","set","default","alias","isBuffer","decode","keys_1","keys","indexOf","padToEven","intToHex","arrayContainsArray","superset","subset","some","Boolean","intToBuffer","hex","getBinarySize","str","byteLength","fromAscii","stringValue","charCodeAt","fromUtf8","toAscii","l","substring","code","substr","String","fromCharCode","toUtf8","getKeys","key","allowEmpty","isHexString","val","msg","inherits","ctor","superCtor","super_","TempCtor","constructor","number","base","endian","isBN","this","negative","words","red","_init","wordSize","window","e","parseHex4Bits","string","parseHexByte","lowerBound","parseBase","start","end","Math","min","max","left","right","_initNumber","_initArray","_parseHex","_parseBase","ceil","w","off","strip","limbLen","limbPow","total","word","imuln","_iaddn","dest","clone","_expand","_normSign","inspect","groupSizes","groupBases","smallMulTo","out","b","lo","carry","k","ncarry","rword","maxJ","groupSize","groupBase","modn","idivn","toBuffer","ArrayType","reqLength","littleEndian","res","q","andln","iushrn","clz32","_countBits","t","_zeroBits","hi","zeroBits","width","abs","inotn","iaddn","testn","notn","ineg","isNeg","neg","iuor","ior","or","uor","iuand","iand","and","uand","iuxor","ixor","xor","uxor","bytesNeeded","bitsLeft","setn","bit","wbit","iadd","isub","add","sub","comb10MulTo","mid","o","a0","al0","ah0","a1","al1","ah1","a2","al2","ah2","a3","al3","ah3","a4","al4","ah4","a5","al5","ah5","a6","al6","ah6","a7","al7","ah7","a8","al8","ah8","a9","al9","ah9","b0","bl0","bh0","b1","bl1","bh1","b2","bl2","bh2","b3","bl3","bh3","b4","bl4","bh4","b5","bl5","bh5","b6","bl6","bh6","b7","bl7","bh7","b8","bl8","bh8","b9","bl9","bh9","w0","imul","w1","w2","w3","w4","w5","w6","w7","w8","w9","w10","w11","w12","w13","w14","w15","w16","w17","w18","jumboMulTo","FFTM","mulp","mulTo","hncarry","bigMulTo","makeRBT","N","revBin","rb","permute","rbt","rws","iws","rtws","itws","transform","rtwdf","cos","PI","itwdf","sin","p","rtwdf_","itwdf_","re","ie","ro","io","rx","guessLen13b","m","odd","conjugate","normalize13b","ws","round","convert13b","stub","ph","_","rwst","iwst","nrws","nrwst","niwst","rmws","mulf","muln","sqr","isqr","toBitArray","iushln","bits","carryMask","newCarry","ishln","hint","extended","h","mask","maskedWords","ishrn","shln","ushln","shrn","ushrn","imaskn","maskn","isubn","addn","subn","iabs","_ishlnsubmul","shift","_wordDiv","mode","bhi","diff","qj","divmod","positive","divn","umod","divRound","dm","half","r2","acc","egcd","A","B","C","D","isEven","yp","xp","im","jm","gcd","_invmp","x1","x2","delta","cmpn","bincn","gtn","gten","gte","ltn","lt","lten","lte","eqn","eq","Red","toRed","ctx","convertTo","_forceRed","fromRed","convertFrom","forceRed","redAdd","redIAdd","redSub","redISub","redShl","shl","redMul","_verify2","redIMul","redSqr","_verify1","redISqr","redSqrt","sqrt","redInvm","redNeg","redPow","primes","k256","p224","p192","p25519","MPrime","_tmp","K256","P224","P192","P25519","prime","_prime","Mont","imod","rinv","minv","ireduce","imulK","_strip","input","outLen","prev","next","mod3","one","nOne","lpow","z","inv","wnd","current","currentLen","mont","u","fill","first","ba","array","secp256k1v3","der","Uint8Array","RangeError","privateKeyNegate","tweak","privateKeyTweakAdd","privateKeyTweakMul","publicKeyTweakAdd","publicKeyTweakMul","publicKeys","publicKeyCombine","signatureNormalize","signatureExport","options","TypeError","signOptions","noncefn","algo","attempt","bufferAlgo","bufferData","buffer","ecdsaSign","recid","ecdsaVerify","ecdsaRecover","ecdh","keccak224","keccak384","keccak512","createHash","update","digest","padded"],"mappings":"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ACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,GACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,GACA,EACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,IACA,GACA,IACA,IACA,IACA,GACA,EACA,EACA,IACA,IACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,IACA,GACA,GACA,IACA,GACA,IACA,EACA,GACA,EACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,IACA,GACA,IACA,IACA,GACA,IACA,IACA,GACA,GACA,GACA,EACA,EACA,EACA,IACA,GACA,EACA,GACA,EAEA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,IAGIqH,EAAqCtH,EAAOC,KAAK,CAErD,GACA,IACA,EACA,GACA,EACA,EACA,EACA,EACA,GAEA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EAEA,IACA,IACA,IACA,GACA,IACA,IACA,EACA,EACA,EACA,GACA,GACA,EACA,EACA,GACA,IACA,GACA,IACA,GACA,EACA,EACA,EACA,GACA,EACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,GACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,GACA,EACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,IACA,GACA,IACA,IACA,IACA,GACA,EACA,EACA,IACA,IACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,IACA,GACA,GACA,IACA,GACA,IACA,GACA,GACA,IACA,IACA,GACA,IACA,IACA,IACA,GACA,IACA,IACA,IACA,GACA,GACA,EACA,IACA,IACA,GACA,IACA,GACA,IACA,IACA,GACA,GACA,IACA,GACA,IACA,IACA,IACA,GACA,IACA,IACA,EACA,GACA,EACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,IACA,GACA,IACA,IACA,GACA,IACA,IACA,GACA,GACA,GACA,EACA,EACA,EACA,IACA,GACA,EACA,GACA,EAEA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,IAGF6E,EAAQU,iBAAmB,SACzBC,EACAkB,EACAjB,QAAA,QAAAA,MAEA,IAAM6B,EAASvH,EAAOC,KACpByF,EAAa2B,EAAmCC,GAIlD,OAFA7B,EAAW2B,KAAKG,EAAQ7B,EAAa,EAAI,GACzCiB,EAAUS,KAAKG,EAAQ7B,EAAa,IAAM,KACnC6B,GAGTzC,EAAQ0C,iBAAmB,SAAS/B,GAClC,IAAMpG,EAASoG,EAAWpG,OA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","file":"static/js/3.caadac71.chunk.js","sourcesContent":["/* eslint-disable no-useless-escape */\nconst utils = require('ethereumjs-util')\nconst BN = require('bn.js')\n\nvar ABI = function () {\n}\n\n// Convert from short to canonical names\n// FIXME: optimise or make this nicer?\nfunction elementaryName (name) {\n  if (name.startsWith('int[')) {\n    return 'int256' + name.slice(3)\n  } else if (name === 'int') {\n    return 'int256'\n  } else if (name.startsWith('uint[')) {\n    return 'uint256' + name.slice(4)\n  } else if (name === 'uint') {\n    return 'uint256'\n  } else if (name.startsWith('fixed[')) {\n    return 'fixed128x128' + name.slice(5)\n  } else if (name === 'fixed') {\n    return 'fixed128x128'\n  } else if (name.startsWith('ufixed[')) {\n    return 'ufixed128x128' + name.slice(6)\n  } else if (name === 'ufixed') {\n    return 'ufixed128x128'\n  }\n  return name\n}\n\nABI.eventID = function (name, types) {\n  // FIXME: use node.js util.format?\n  var sig = name + '(' + types.map(elementaryName).join(',') + ')'\n  return utils.keccak256(Buffer.from(sig))\n}\n\nABI.methodID = function (name, types) {\n  return ABI.eventID(name, types).slice(0, 4)\n}\n\n// Parse N from type<N>\nfunction parseTypeN (type) {\n  return parseInt(/^\\D+(\\d+)$/.exec(type)[1], 10)\n}\n\n// Parse N,M from type<N>x<M>\nfunction parseTypeNxM (type) {\n  var tmp = /^\\D+(\\d+)x(\\d+)$/.exec(type)\n  return [ parseInt(tmp[1], 10), parseInt(tmp[2], 10) ]\n}\n\n// Parse N in type[<N>] where \"type\" can itself be an array type.\nfunction parseTypeArray (type) {\n  var tmp = type.match(/(.*)\\[(.*?)\\]$/)\n  if (tmp) {\n    return tmp[2] === '' ? 'dynamic' : parseInt(tmp[2], 10)\n  }\n  return null\n}\n\nfunction parseNumber (arg) {\n  var type = typeof arg\n  if (type === 'string') {\n    if (utils.isHexPrefixed(arg)) {\n      return new BN(utils.stripHexPrefix(arg), 16)\n    } else {\n      return new BN(arg, 10)\n    }\n  } else if (type === 'number') {\n    return new BN(arg)\n  } else if (arg.toArray) {\n    // assume this is a BN for the moment, replace with BN.isBN soon\n    return arg\n  } else {\n    throw new Error('Argument is not a number')\n  }\n}\n\n// someMethod(bytes,uint)\n// someMethod(bytes,uint):(boolean)\nfunction parseSignature (sig) {\n  var tmp = /^(\\w+)\\((.*)\\)$/.exec(sig)\n\n  if (tmp.length !== 3) {\n    throw new Error('Invalid method signature')\n  }\n\n  var args = /^(.+)\\):\\((.+)$/.exec(tmp[2])\n\n  if (args !== null && args.length === 3) {\n    return {\n      method: tmp[1],\n      args: args[1].split(','),\n      retargs: args[2].split(',')\n    }\n  } else {\n    var params = tmp[2].split(',')\n    if (params.length === 1 && params[0] === '') {\n      // Special-case (possibly naive) fixup for functions that take no arguments.\n      // TODO: special cases are always bad, but this makes the function return\n      // match what the calling functions expect\n      params = []\n    }\n    return {\n      method: tmp[1],\n      args: params\n    }\n  }\n}\n\n// Encodes a single item (can be dynamic array)\n// @returns: Buffer\nfunction encodeSingle (type, arg) {\n  var size, num, ret, i\n\n  if (type === 'address') {\n    return encodeSingle('uint160', parseNumber(arg))\n  } else if (type === 'bool') {\n    return encodeSingle('uint8', arg ? 1 : 0)\n  } else if (type === 'string') {\n    return encodeSingle('bytes', Buffer.from(arg, 'utf8'))\n  } else if (isArray(type)) {\n    // this part handles fixed-length ([2]) and variable length ([]) arrays\n    // NOTE: we catch here all calls to arrays, that simplifies the rest\n    if (typeof arg.length === 'undefined') {\n      throw new Error('Not an array?')\n    }\n    size = parseTypeArray(type)\n    if (size !== 'dynamic' && size !== 0 && arg.length > size) {\n      throw new Error('Elements exceed array size: ' + size)\n    }\n    ret = []\n    type = type.slice(0, type.lastIndexOf('['))\n    if (typeof arg === 'string') {\n      arg = JSON.parse(arg)\n    }\n    for (i in arg) {\n      ret.push(encodeSingle(type, arg[i]))\n    }\n    if (size === 'dynamic') {\n      var length = encodeSingle('uint256', arg.length)\n      ret.unshift(length)\n    }\n    return Buffer.concat(ret)\n  } else if (type === 'bytes') {\n    arg = Buffer.from(arg)\n\n    ret = Buffer.concat([ encodeSingle('uint256', arg.length), arg ])\n\n    if ((arg.length % 32) !== 0) {\n      ret = Buffer.concat([ ret, utils.zeros(32 - (arg.length % 32)) ])\n    }\n\n    return ret\n  } else if (type.startsWith('bytes')) {\n    size = parseTypeN(type)\n    if (size < 1 || size > 32) {\n      throw new Error('Invalid bytes<N> width: ' + size)\n    }\n\n    return utils.setLengthRight(arg, 32)\n  } else if (type.startsWith('uint')) {\n    size = parseTypeN(type)\n    if ((size % 8) || (size < 8) || (size > 256)) {\n      throw new Error('Invalid uint<N> width: ' + size)\n    }\n\n    num = parseNumber(arg)\n    if (num.bitLength() > size) {\n      throw new Error('Supplied uint exceeds width: ' + size + ' vs ' + num.bitLength())\n    }\n\n    if (num < 0) {\n      throw new Error('Supplied uint is negative')\n    }\n\n    return num.toArrayLike(Buffer, 'be', 32)\n  } else if (type.startsWith('int')) {\n    size = parseTypeN(type)\n    if ((size % 8) || (size < 8) || (size > 256)) {\n      throw new Error('Invalid int<N> width: ' + size)\n    }\n\n    num = parseNumber(arg)\n    if (num.bitLength() > size) {\n      throw new Error('Supplied int exceeds width: ' + size + ' vs ' + num.bitLength())\n    }\n\n    return num.toTwos(256).toArrayLike(Buffer, 'be', 32)\n  } else if (type.startsWith('ufixed')) {\n    size = parseTypeNxM(type)\n\n    num = parseNumber(arg)\n\n    if (num < 0) {\n      throw new Error('Supplied ufixed is negative')\n    }\n\n    return encodeSingle('uint256', num.mul(new BN(2).pow(new BN(size[1]))))\n  } else if (type.startsWith('fixed')) {\n    size = parseTypeNxM(type)\n\n    return encodeSingle('int256', parseNumber(arg).mul(new BN(2).pow(new BN(size[1]))))\n  }\n\n  throw new Error('Unsupported or invalid type: ' + type)\n}\n\n// Decodes a single item (can be dynamic array)\n// @returns: array\n// FIXME: this method will need a lot of attention at checking limits and validation\nfunction decodeSingle (parsedType, data, offset) {\n  if (typeof parsedType === 'string') {\n    parsedType = parseType(parsedType)\n  }\n  var size, num, ret, i\n\n  if (parsedType.name === 'address') {\n    return decodeSingle(parsedType.rawType, data, offset).toArrayLike(Buffer, 'be', 20).toString('hex')\n  } else if (parsedType.name === 'bool') {\n    return decodeSingle(parsedType.rawType, data, offset).toString() === new BN(1).toString()\n  } else if (parsedType.name === 'string') {\n    var bytes = decodeSingle(parsedType.rawType, data, offset)\n    return Buffer.from(bytes, 'utf8').toString()\n  } else if (parsedType.isArray) {\n    // this part handles fixed-length arrays ([2]) and variable length ([]) arrays\n    // NOTE: we catch here all calls to arrays, that simplifies the rest\n    ret = []\n    size = parsedType.size\n\n    if (parsedType.size === 'dynamic') {\n      offset = decodeSingle('uint256', data, offset).toNumber()\n      size = decodeSingle('uint256', data, offset).toNumber()\n      offset = offset + 32\n    }\n    for (i = 0; i < size; i++) {\n      var decoded = decodeSingle(parsedType.subArray, data, offset)\n      ret.push(decoded)\n      offset += parsedType.subArray.memoryUsage\n    }\n    return ret\n  } else if (parsedType.name === 'bytes') {\n    offset = decodeSingle('uint256', data, offset).toNumber()\n    size = decodeSingle('uint256', data, offset).toNumber()\n    return data.slice(offset + 32, offset + 32 + size)\n  } else if (parsedType.name.startsWith('bytes')) {\n    return data.slice(offset, offset + parsedType.size)\n  } else if (parsedType.name.startsWith('uint')) {\n    num = new BN(data.slice(offset, offset + 32), 16, 'be')\n    if (num.bitLength() > parsedType.size) {\n      throw new Error('Decoded int exceeds width: ' + parsedType.size + ' vs ' + num.bitLength())\n    }\n    return num\n  } else if (parsedType.name.startsWith('int')) {\n    num = new BN(data.slice(offset, offset + 32), 16, 'be').fromTwos(256)\n    if (num.bitLength() > parsedType.size) {\n      throw new Error('Decoded uint exceeds width: ' + parsedType.size + ' vs ' + num.bitLength())\n    }\n\n    return num\n  } else if (parsedType.name.startsWith('ufixed')) {\n    size = new BN(2).pow(new BN(parsedType.size[1]))\n    num = decodeSingle('uint256', data, offset)\n    if (!num.mod(size).isZero()) {\n      throw new Error('Decimals not supported yet')\n    }\n    return num.div(size)\n  } else if (parsedType.name.startsWith('fixed')) {\n    size = new BN(2).pow(new BN(parsedType.size[1]))\n    num = decodeSingle('int256', data, offset)\n    if (!num.mod(size).isZero()) {\n      throw new Error('Decimals not supported yet')\n    }\n    return num.div(size)\n  }\n  throw new Error('Unsupported or invalid type: ' + parsedType.name)\n}\n\n// Parse the given type\n// @returns: {} containing the type itself, memory usage and (including size and subArray if applicable)\nfunction parseType (type) {\n  var size\n  var ret\n  if (isArray(type)) {\n    size = parseTypeArray(type)\n    var subArray = type.slice(0, type.lastIndexOf('['))\n    subArray = parseType(subArray)\n    ret = {\n      isArray: true,\n      name: type,\n      size: size,\n      memoryUsage: size === 'dynamic' ? 32 : subArray.memoryUsage * size,\n      subArray: subArray\n    }\n    return ret\n  } else {\n    var rawType\n    switch (type) {\n      case 'address':\n        rawType = 'uint160'\n        break\n      case 'bool':\n        rawType = 'uint8'\n        break\n      case 'string':\n        rawType = 'bytes'\n        break\n    }\n    ret = {\n      rawType: rawType,\n      name: type,\n      memoryUsage: 32\n    }\n\n    if ((type.startsWith('bytes') && type !== 'bytes') || type.startsWith('uint') || type.startsWith('int')) {\n      ret.size = parseTypeN(type)\n    } else if (type.startsWith('ufixed') || type.startsWith('fixed')) {\n      ret.size = parseTypeNxM(type)\n    }\n\n    if (type.startsWith('bytes') && type !== 'bytes' && (ret.size < 1 || ret.size > 32)) {\n      throw new Error('Invalid bytes<N> width: ' + ret.size)\n    }\n    if ((type.startsWith('uint') || type.startsWith('int')) && (ret.size % 8 || ret.size < 8 || ret.size > 256)) {\n      throw new Error('Invalid int/uint<N> width: ' + ret.size)\n    }\n    return ret\n  }\n}\n\n// Is a type dynamic?\nfunction isDynamic (type) {\n  // FIXME: handle all types? I don't think anything is missing now\n  return (type === 'string') || (type === 'bytes') || (parseTypeArray(type) === 'dynamic')\n}\n\n// Is a type an array?\nfunction isArray (type) {\n  return type.lastIndexOf(']') === type.length - 1\n}\n\n// Encode a method/event with arguments\n// @types an array of string type names\n// @args  an array of the appropriate values\nABI.rawEncode = function (types, values) {\n  var output = []\n  var data = []\n\n  var headLength = 0\n\n  types.forEach(function (type) {\n    if (isArray(type)) {\n      var size = parseTypeArray(type)\n\n      if (size !== 'dynamic') {\n        headLength += 32 * size\n      } else {\n        headLength += 32\n      }\n    } else {\n      headLength += 32\n    }\n  })\n\n  for (var i = 0; i < types.length; i++) {\n    var type = elementaryName(types[i])\n    var value = values[i]\n    var cur = encodeSingle(type, value)\n\n    // Use the head/tail method for storing dynamic data\n    if (isDynamic(type)) {\n      output.push(encodeSingle('uint256', headLength))\n      data.push(cur)\n      headLength += cur.length\n    } else {\n      output.push(cur)\n    }\n  }\n\n  return Buffer.concat(output.concat(data))\n}\n\nABI.rawDecode = function (types, data) {\n  var ret = []\n  data = Buffer.from(data)\n  var offset = 0\n  for (var i = 0; i < types.length; i++) {\n    var type = elementaryName(types[i])\n    var parsed = parseType(type, data, offset)\n    var decoded = decodeSingle(parsed, data, offset)\n    offset += parsed.memoryUsage\n    ret.push(decoded)\n  }\n  return ret\n}\n\nABI.simpleEncode = function (method) {\n  var args = Array.prototype.slice.call(arguments).slice(1)\n  var sig = parseSignature(method)\n\n  // FIXME: validate/convert arguments\n  if (args.length !== sig.args.length) {\n    throw new Error('Argument count mismatch')\n  }\n\n  return Buffer.concat([ ABI.methodID(sig.method, sig.args), ABI.rawEncode(sig.args, args) ])\n}\n\nABI.simpleDecode = function (method, data) {\n  var sig = parseSignature(method)\n\n  // FIXME: validate/convert arguments\n  if (!sig.retargs) {\n    throw new Error('No return values in method')\n  }\n\n  return ABI.rawDecode(sig.retargs, data)\n}\n\nfunction stringify (type, value) {\n  if (type.startsWith('address') || type.startsWith('bytes')) {\n    return '0x' + value.toString('hex')\n  } else {\n    return value.toString()\n  }\n}\n\nABI.stringify = function (types, values) {\n  var ret = []\n\n  for (var i in types) {\n    var type = types[i]\n    var value = values[i]\n\n    // if it is an array type, concat the items\n    if (/^[^\\[]+\\[.*\\]$/.test(type)) {\n      value = value.map(function (item) {\n        return stringify(type, item)\n      }).join(', ')\n    } else {\n      value = stringify(type, value)\n    }\n\n    ret.push(value)\n  }\n\n  return ret\n}\n\nABI.solidityHexValue = function (type, value, bitsize) {\n  // pass in bitsize = null if use default bitsize\n  var size, num\n  if (isArray(type)) {\n    var subType = type.replace(/\\[.*?\\]/, '')\n    if (!isArray(subType)) {\n      var arraySize = parseTypeArray(type)\n      if (arraySize !== 'dynamic' && arraySize !== 0 && value.length > arraySize) {\n        throw new Error('Elements exceed array size: ' + arraySize)\n      }\n    }\n    var arrayValues = value.map(function (v) {\n      return ABI.solidityHexValue(subType, v, 256)\n    })\n    return Buffer.concat(arrayValues)\n  } else if (type === 'bytes') {\n    return value\n  } else if (type === 'string') {\n    return Buffer.from(value, 'utf8')\n  } else if (type === 'bool') {\n    bitsize = bitsize || 8\n    var padding = Array((bitsize) / 4).join('0')\n    return Buffer.from(value ? padding + '1' : padding + '0', 'hex')\n  } else if (type === 'address') {\n    var bytesize = 20\n    if (bitsize) {\n      bytesize = bitsize / 8\n    }\n    return utils.setLengthLeft(value, bytesize)\n  } else if (type.startsWith('bytes')) {\n    size = parseTypeN(type)\n    if (size < 1 || size > 32) {\n      throw new Error('Invalid bytes<N> width: ' + size)\n    }\n\n    return utils.setLengthRight(value, size)\n  } else if (type.startsWith('uint')) {\n    size = parseTypeN(type)\n    if ((size % 8) || (size < 8) || (size > 256)) {\n      throw new Error('Invalid uint<N> width: ' + size)\n    }\n\n    num = parseNumber(value)\n    if (num.bitLength() > size) {\n      throw new Error('Supplied uint exceeds width: ' + size + ' vs ' + num.bitLength())\n    }\n\n    bitsize = bitsize || size\n    return num.toArrayLike(Buffer, 'be', bitsize / 8)\n  } else if (type.startsWith('int')) {\n    size = parseTypeN(type)\n    if ((size % 8) || (size < 8) || (size > 256)) {\n      throw new Error('Invalid int<N> width: ' + size)\n    }\n\n    num = parseNumber(value)\n    if (num.bitLength() > size) {\n      throw new Error('Supplied int exceeds width: ' + size + ' vs ' + num.bitLength())\n    }\n\n    bitsize = bitsize || size\n    return num.toTwos(size).toArrayLike(Buffer, 'be', bitsize / 8)\n  } else {\n    // FIXME: support all other types\n    throw new Error('Unsupported or invalid type: ' + type)\n  }\n}\n\nABI.solidityPack = function (types, values) {\n  if (types.length !== values.length) {\n    throw new Error('Number of types are not matching the values')\n  }\n\n  var ret = []\n\n  for (var i = 0; i < types.length; i++) {\n    var type = elementaryName(types[i])\n    var value = values[i]\n    ret.push(ABI.solidityHexValue(type, value, null))\n  }\n\n  return Buffer.concat(ret)\n}\n\nABI.soliditySHA3 = function (types, values) {\n  return utils.keccak256(ABI.solidityPack(types, values))\n}\n\nABI.soliditySHA256 = function (types, values) {\n  return utils.sha256(ABI.solidityPack(types, values))\n}\n\nABI.solidityRIPEMD160 = function (types, values) {\n  return utils.ripemd160(ABI.solidityPack(types, values), true)\n}\n\n// Serpent's users are familiar with this encoding\n// - s: string\n// - b: bytes\n// - b<N>: bytes<N>\n// - i: int256\n// - a: int256[]\n\nfunction isNumeric (c) {\n  // FIXME: is this correct? Seems to work\n  return (c >= '0') && (c <= '9')\n}\n\n// For a \"documentation\" refer to https://github.com/ethereum/serpent/blob/develop/preprocess.cpp\nABI.fromSerpent = function (sig) {\n  var ret = []\n  for (var i = 0; i < sig.length; i++) {\n    var type = sig[i]\n    if (type === 's') {\n      ret.push('bytes')\n    } else if (type === 'b') {\n      var tmp = 'bytes'\n      var j = i + 1\n      while ((j < sig.length) && isNumeric(sig[j])) {\n        tmp += sig[j] - '0'\n        j++\n      }\n      i = j - 1\n      ret.push(tmp)\n    } else if (type === 'i') {\n      ret.push('int256')\n    } else if (type === 'a') {\n      ret.push('int256[]')\n    } else {\n      throw new Error('Unsupported or invalid type: ' + type)\n    }\n  }\n  return ret\n}\n\nABI.toSerpent = function (types) {\n  var ret = []\n  for (var i = 0; i < types.length; i++) {\n    var type = types[i]\n    if (type === 'bytes') {\n      ret.push('s')\n    } else if (type.startsWith('bytes')) {\n      ret.push('b' + parseTypeN(type))\n    } else if (type === 'int256') {\n      ret.push('i')\n    } else if (type === 'int256[]') {\n      ret.push('a')\n    } else {\n      throw new Error('Unsupported or invalid type: ' + type)\n    }\n  }\n  return ret.join('')\n}\n\nmodule.exports = ABI\n",null,null,null,null,null,null,null,"'use strict';\n\nvar isHexPrefixed = require('is-hex-prefixed');\nvar stripHexPrefix = require('strip-hex-prefix');\n\n/**\n * Pads a `String` to have an even length\n * @param {String} value\n * @return {String} output\n */\nfunction padToEven(value) {\n  var a = value; // eslint-disable-line\n\n  if (typeof a !== 'string') {\n    throw new Error('[ethjs-util] while padding to even, value must be string, is currently ' + typeof a + ', while padToEven.');\n  }\n\n  if (a.length % 2) {\n    a = '0' + a;\n  }\n\n  return a;\n}\n\n/**\n * Converts a `Number` into a hex `String`\n * @param {Number} i\n * @return {String}\n */\nfunction intToHex(i) {\n  var hex = i.toString(16); // eslint-disable-line\n\n  return '0x' + hex;\n}\n\n/**\n * Converts an `Number` to a `Buffer`\n * @param {Number} i\n * @return {Buffer}\n */\nfunction intToBuffer(i) {\n  var hex = intToHex(i);\n\n  return new Buffer(padToEven(hex.slice(2)), 'hex');\n}\n\n/**\n * Get the binary size of a string\n * @param {String} str\n * @return {Number}\n */\nfunction getBinarySize(str) {\n  if (typeof str !== 'string') {\n    throw new Error('[ethjs-util] while getting binary size, method getBinarySize requires input \\'str\\' to be type String, got \\'' + typeof str + '\\'.');\n  }\n\n  return Buffer.byteLength(str, 'utf8');\n}\n\n/**\n * Returns TRUE if the first specified array contains all elements\n * from the second one. FALSE otherwise.\n *\n * @param {array} superset\n * @param {array} subset\n *\n * @returns {boolean}\n */\nfunction arrayContainsArray(superset, subset, some) {\n  if (Array.isArray(superset) !== true) {\n    throw new Error('[ethjs-util] method arrayContainsArray requires input \\'superset\\' to be an array got type \\'' + typeof superset + '\\'');\n  }\n  if (Array.isArray(subset) !== true) {\n    throw new Error('[ethjs-util] method arrayContainsArray requires input \\'subset\\' to be an array got type \\'' + typeof subset + '\\'');\n  }\n\n  return subset[Boolean(some) && 'some' || 'every'](function (value) {\n    return superset.indexOf(value) >= 0;\n  });\n}\n\n/**\n * Should be called to get utf8 from it's hex representation\n *\n * @method toUtf8\n * @param {String} string in hex\n * @returns {String} ascii string representation of hex value\n */\nfunction toUtf8(hex) {\n  var bufferValue = new Buffer(padToEven(stripHexPrefix(hex).replace(/^0+|0+$/g, '')), 'hex');\n\n  return bufferValue.toString('utf8');\n}\n\n/**\n * Should be called to get ascii from it's hex representation\n *\n * @method toAscii\n * @param {String} string in hex\n * @returns {String} ascii string representation of hex value\n */\nfunction toAscii(hex) {\n  var str = ''; // eslint-disable-line\n  var i = 0,\n      l = hex.length; // eslint-disable-line\n\n  if (hex.substring(0, 2) === '0x') {\n    i = 2;\n  }\n\n  for (; i < l; i += 2) {\n    var code = parseInt(hex.substr(i, 2), 16);\n    str += String.fromCharCode(code);\n  }\n\n  return str;\n}\n\n/**\n * Should be called to get hex representation (prefixed by 0x) of utf8 string\n *\n * @method fromUtf8\n * @param {String} string\n * @param {Number} optional padding\n * @returns {String} hex representation of input string\n */\nfunction fromUtf8(stringValue) {\n  var str = new Buffer(stringValue, 'utf8');\n\n  return '0x' + padToEven(str.toString('hex')).replace(/^0+|0+$/g, '');\n}\n\n/**\n * Should be called to get hex representation (prefixed by 0x) of ascii string\n *\n * @method fromAscii\n * @param {String} string\n * @param {Number} optional padding\n * @returns {String} hex representation of input string\n */\nfunction fromAscii(stringValue) {\n  var hex = ''; // eslint-disable-line\n  for (var i = 0; i < stringValue.length; i++) {\n    // eslint-disable-line\n    var code = stringValue.charCodeAt(i);\n    var n = code.toString(16);\n    hex += n.length < 2 ? '0' + n : n;\n  }\n\n  return '0x' + hex;\n}\n\n/**\n * getKeys([{a: 1, b: 2}, {a: 3, b: 4}], 'a') => [1, 3]\n *\n * @method getKeys get specific key from inner object array of objects\n * @param {String} params\n * @param {String} key\n * @param {Boolean} allowEmpty\n * @returns {Array} output just a simple array of output keys\n */\nfunction getKeys(params, key, allowEmpty) {\n  if (!Array.isArray(params)) {\n    throw new Error('[ethjs-util] method getKeys expecting type Array as \\'params\\' input, got \\'' + typeof params + '\\'');\n  }\n  if (typeof key !== 'string') {\n    throw new Error('[ethjs-util] method getKeys expecting type String for input \\'key\\' got \\'' + typeof key + '\\'.');\n  }\n\n  var result = []; // eslint-disable-line\n\n  for (var i = 0; i < params.length; i++) {\n    // eslint-disable-line\n    var value = params[i][key]; // eslint-disable-line\n    if (allowEmpty && !value) {\n      value = '';\n    } else if (typeof value !== 'string') {\n      throw new Error('invalid abi');\n    }\n    result.push(value);\n  }\n\n  return result;\n}\n\n/**\n * Is the string a hex string.\n *\n * @method check if string is hex string of specific length\n * @param {String} value\n * @param {Number} length\n * @returns {Boolean} output the string is a hex string\n */\nfunction isHexString(value, length) {\n  if (typeof value !== 'string' || !value.match(/^0x[0-9A-Fa-f]*$/)) {\n    return false;\n  }\n\n  if (length && value.length !== 2 + 2 * length) {\n    return false;\n  }\n\n  return true;\n}\n\nmodule.exports = {\n  arrayContainsArray: arrayContainsArray,\n  intToBuffer: intToBuffer,\n  getBinarySize: getBinarySize,\n  isHexPrefixed: isHexPrefixed,\n  stripHexPrefix: stripHexPrefix,\n  padToEven: padToEven,\n  intToHex: intToHex,\n  fromAscii: fromAscii,\n  fromUtf8: fromUtf8,\n  toAscii: toAscii,\n  toUtf8: toUtf8,\n  getKeys: getKeys,\n  isHexString: isHexString\n};","/**\n * Returns a `Boolean` on whether or not the a `String` starts with '0x'\n * @param {String} str the string input value\n * @return {Boolean} a boolean if it is or is not hex prefixed\n * @throws if the str input is not a string\n */\nmodule.exports = function isHexPrefixed(str) {\n  if (typeof str !== 'string') {\n    throw new Error(\"[is-hex-prefixed] value must be type 'string', is currently type \" + (typeof str) + \", while checking isHexPrefixed.\");\n  }\n\n  return str.slice(0, 2) === '0x';\n}\n","var isHexPrefixed = require('is-hex-prefixed');\n\n/**\n * Removes '0x' from a given `String` is present\n * @param {String} str the string value\n * @return {String|Optional} a string by pass if necessary\n */\nmodule.exports = function stripHexPrefix(str) {\n  if (typeof str !== 'string') {\n    return str;\n  }\n\n  return isHexPrefixed(str) ? str.slice(2) : str;\n}\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [ number & 0x3ffffff ];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [ 0 ];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this.strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // 'A' - 'F'\n    if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    // '0' - '9'\n    } else {\n      return (c - 48) & 0xf;\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this.strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        r += c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        r += c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r += c;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [ 0 ];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this.strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype.strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  BN.prototype.inspect = function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16);\n  };\n\n  BN.prototype.toBuffer = function toBuffer (endian, length) {\n    assert(typeof Buffer !== 'undefined');\n    return this.toArrayLike(Buffer, endian, length);\n  };\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    this.strip();\n    var littleEndian = endian === 'le';\n    var res = new ArrayType(reqLength);\n\n    var b, i;\n    var q = this.clone();\n    if (!littleEndian) {\n      // Assume big-endian\n      for (i = 0; i < reqLength - byteLength; i++) {\n        res[i] = 0;\n      }\n\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[reqLength - i - 1] = b;\n      }\n    } else {\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[i] = b;\n      }\n\n      for (; i < reqLength; i++) {\n        res[i] = 0;\n      }\n    }\n\n    return res;\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this.strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this.strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this.strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    var fftm = new FFTM();\n    return fftm.mulp(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out.strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this.strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) < num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this.strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this.strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q.strip();\n    }\n    a.strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modn = function modn (num) {\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return acc;\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this.strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is BN v4 instance\n        r.strip();\n      } else {\n        // r is BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    return a.umod(this.m)._forceRed(this);\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","module.exports = require('./lib/index.js')\n",null,null,null],"sourceRoot":""}